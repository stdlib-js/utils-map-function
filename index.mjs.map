{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times and returns an array of accumulated function return values.\n*\n* @param {Function} fcn - function to invoke\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Array} accumulated results\n*\n* @example\n* function fcn( i ) {\n*     return i;\n* }\n*\n* var arr = mapFun( fcn, 5 );\n* // returns [ 0, 1, 2, 3, 4 ]\n*/\nfunction mapFun( fcn, n, thisArg ) {\n\tvar out;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( '0kU3p', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( format( '0kU3k', n ) );\n\t}\n\t// Note: we explicitly do not preallocate in order to ensure \"fast\" elements for large output arrays.\n\tout = [];\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout.push( fcn.call( thisArg, i ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default mapFun;\n"],"names":["mapFun","fcn","n","thisArg","out","i","isFunction","TypeError","format","isNonNegativeInteger","push","call"],"mappings":";;uSA+CA,SAASA,EAAQC,EAAKC,EAAGC,GACxB,IAAIC,EACAC,EACJ,IAAMC,EAAYL,GACjB,MAAM,IAAIM,UAAWC,EAAQ,QAASP,IAEvC,IAAMQ,EAAsBP,GAC3B,MAAM,IAAIK,UAAWC,EAAQ,QAASN,IAIvC,IADAE,EAAM,GACAC,EAAI,EAAGA,EAAIH,EAAGG,IACnBD,EAAIM,KAAMT,EAAIU,KAAMR,EAASE,IAE9B,OAAOD,CACR"}